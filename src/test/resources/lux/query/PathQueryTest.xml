<test-suite>
  <meta>
    <title>Path Test Queries</title>
  </meta>
  <setup>
    <keys>
      <key id="doctype">name(/*)</key>
      <key id="title">/*/TITLE</key>
      <key id="title_all">//TITLE</key>
      <key id="scnnum" type="int">/SCENE/@scene</key>
      <key id="actnum" type="int">/*/@act</key>
    </keys>
  </setup>
  <test-cases>
    <include file="base-cases.xml" />
    <test-case name="path-boolean">
      <!-- SlopCounter had a bug - now we use the max slop of children
           of BinaryOperation and Sequence
      -->
      <query>//ACT[TITLE | .//SCENE]</query>
      <expect><query id="ACT_TITLE_OR_SCENE" /> </expect>
    </test-case>
    <test-case name="variable-1">
      <!-- TODO: what is this testing? I think we had introduced a bug
           that showed up in the autocomplete?
      -->
      <query>declare namespace lux="http://luxdb.net";
declare variable $lux:http as document-node() external;

let $query := $lux:http/http/params/param[@name="query"]/value/string()
let $tokens := 
  for $s in subsequence(lux:field-terms("lux_path", $query), 1, 15) 
  where not ($s eq "{}")
  return concat('"', $s, '"')
return
text { '[', string-join ($tokens, ","), ']' }
      </query>
      <expect />
    </test-case>
  </test-cases>
  <queries>
    <include file="path-queries.xml" />
  </queries>
</test-suite>
<!--
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this file,
 * You can obtain one at http://mozilla.org/MPL/2.0/.
-->
