* second release (1.0?)
** distribution
*** bundles
revisit now that we have app-server
**** jar + config (zip and tgz)
include also dependent jars - OK
TODO: test this distribution using a Solr-only install
**** app-server (jetty + config + war)
*** Maven
**** expath dependencies
*** test install procedure
** Namespace
   Change to luxdb.net from luxproject.net?
** Hosting for luxdb.net, luxdb.org, luxdb.com
   park luxdb.org (as is); register luxdb.com (w/dyn) and park
   sign up for DNS at dyn; get a server at rackspace
** import to GitHub
** web site setup for luxdb.net
   Wait and see what is available on GitHub.
   Install Lux, of course.  Package a site using Maven?  Also provide for
   dynamic content somewhere on the server?  Yuck I don't want a build a
   CMS just yet!!  However: generate function documentation??
** web content
*** startup documentation
download/install/getting started
*** about lux
Explain what it is, is not, what it's for, why you might want to use it, etc.
license
statement about contributions
*** function / query documentation
*** cookbook / FAQ
*** bug tracker
*** source control system
*** mailing list
*** links
   to luxdb.net from GitHub and vice-versa
*** sample webapp
based on Solr; reads from files and/or the database
some easy way to load files
** criteria for release 1.0
*** Highest Quality
Rigorous testing; no known major bugs.
**** 90+ % test coverage
Add an XQTS test 
measure coverage w/Cobertura
*** XQuery search API
enable explicit access to indexes
**** search, count, exists
**** terms (lexicon functions)
*** word and value and xpath indexes
*** XQuery 1.0
optimized sorting using indexes
*** Add relevant copyright notices

* first release
DONE
** Very Good Quality
Rigorous testing; no known severe bugs.
*** check performance
Make sure our search tests really test what they are supposed to?
**** check indexing speed having added offsets
**** check search speed- it seems a bit slow
break down by document creation / parsing, lucene query, saxon query, result construction, assertions?
*** Pagination
We have lazy eval working
*** path and element name indexes
ok
*** text indexes
ok
*** check integration w/ifpress-solr
ifpress-solr tests pass with lux installed and configured to use xml_text as
its xml field.
**** 
*** clean API
good enough for an ifactory-internal release
*** use of namespaces tested
