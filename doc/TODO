* step back - what do we want to be good it
the app server is really secondary, right?  although necessary to shake out
bugs, and to provide an easy on-ramp.  But the core benefits should be:
** correctness
** speed
*** indexing and query optimization
*** document loading
**** compare
** features
* Distribution
** blog post
** lucene
mention on the mailing list
** xml-dev
mention on the mailing list
* Plans
** benchmark framework
Eventually will want to scale up, perform repeats, report timings in a
better way, etc.  For now unit tests seem fine.
* Advanced Indexing techniques
** index XML structure
"shred" or "fragment" - should help w/large docs.. Additional query
optimizations will be possible (like indexed //foo without the need for any
post-evaluation, joins, etc).
* Saxon integration
** compatible API
Expose some kind of API like Saxon's? Or behave as a Saxon Configuration
plus a preprocessing optimizer?
** PTree binary storage
Use tinytree for storage; evaluate the perf improvement from this.  Could
use Ptree if you have saxon-PE+.  Or could build a replacement (maybe for
in house use, but don't release).  Actually this proves to be difficult
without totally taking over Saxon.
** check whether our code works w/9.1 (Saxon B) ?
