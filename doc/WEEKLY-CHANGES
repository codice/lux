3/10; first implementation w/Jaxen and Saxon; used a global optimization,
attempting to generate one single query per expression, and used a special
lucene collector.  Limitations of this became quickly apparent

4/04; developed translator as precursor to generating sub-expression queries
using a function.

4/11; a name-query optimizer beginning to take shape

4/22; optimizer working well, but need for lazy eval becomes apparent

4/23 - 4/25; switch to lazy evaluation

4/25-4/30; tightening up various optimizations

4/31-5/9; path indexing implemented and working

5/10-5/13; solr components working again (broken by switch to lucene pull api); code cleanup

6/3; XQuery 1.0; XQTS 99% passing; API cleanup; Solr field autoconfig;
PubFactory sandbox testing

7/5: value and word indexes

11/19: OK it's been a while since I updated - actually a lot has been done:

query api: lux:search now accepts an xml node-tree as a query.  The intent
is to provide convenience methods for constructing such a tree so that
search can be called from xquery code more easily.

binary storage: I implemented a binary storage format for TinyTree which
allows for faster parsing; 5-20x speedup with a 1.5x size increase (varies,
often less).  TinyBinary is in a branch though, since it relies on a
modification to Saxon and I don't intend to release as part of the open
source package.

iFactory release: I released lux 0.2 to iFactory where it has been used in
a limited way for some data analysis and exploration within the loader
sandbox app.

app server: I implemented a simple app server embedded with solr that
serves up pages written in xquery.

index term retrieval: I added an xquery function lux:fieldTerms that
retrieves terms from the index.

demo: I made a little search demo written in xquery that runs in the app
server and demonstrates auto-completion of node names and term values, and
search.  It sports a sunflwor logo.

11/25

Major code reorganization/renaming of packages etc.  I spent some quality
time w/ Sonar/J and eliminated a lot of cyclical dependencies in an attempt
to make the code cleaner and easier to maintain.

I added the ability to do insert/delete/commit via xquery function calls.

12/1/2012

I implemented searching via collection(), but this doesn't actually enable
any additional optimizations in Saxon PE/EE.  I'll leave the code path in
place for now, just in case some future Saxon release makes this useful.  A
whole day of work wasted on a failed experiment. Poop.

12/8/2012

Made some improvements to the document-order optimization situation in
PE/EE.  Where we can prove that document order is not required we now
generate a flwor expression rather than an xpath, so that we are not
imposing a requirement to sort results in document order.

Implemented xpath indexes, and order by optimizations that can use them via
lux:field-values().  Fixed a longstanding bug where we would optimize too
many functions by default: we are now conservative - we don't use a
function's arguments to limit the query unless we can prove that it
preserves sequences.

UPCOMING

****** package and RELEASE 0.4 to ifactory

